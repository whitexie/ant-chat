name: Build Electron App

on:
  workflow_dispatch:
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        node-version: [20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10
        run_install: false
        
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        
    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
        
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build app (Windows)
      if: matrix.os == 'windows-latest'
      run: pnpm build:win
      
    - name: Build app (macOS)
      if: matrix.os == 'macos-latest'
      run: pnpm build:mac
      
    - name: Upload artifacts (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: |
          packages/electron/release/**
          !packages/electron/release/**/*-unpacked/
        
    - name: Upload artifacts (macOS)
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: |
          packages/electron/release/**
          !packages/electron/release/**/*-unpacked/
        
    - name: Upload release assets
      if: github.event_name == 'release' && github.event.action == 'published'
      uses: softprops/action-gh-release@v2
      with:
        files: |
          packages/electron/release/**/*.exe
          packages/electron/release/**/*.dmg
          packages/electron/release/**/*.blockmap
          !packages/electron/release/**/*-unpacked/
      env:
        GITHUB_TOKEN: ${{ secrets.ANT_CHAT_RELEASE }}
